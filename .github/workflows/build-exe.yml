name: Auto Version + Build + Release

on:
  push:
    branches: [main]
    
permissions:
  contents: write

jobs:
  build-release:
    runs-on: windows-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.10

    - name: Get latest tag and bump patch version
      id: versioning
      run: |
        git fetch --tags
        $latest = git tag --sort=-v:refname | Select-Object -First 1
        if (-not $latest) { $latest = "v0.0.0" }
        $split = $latest.TrimStart("v").Split(".")
        $major = [int]$split[0]
        $minor = [int]$split[1]
        $patch = [int]$split[2] + 1
        $new = "v$major.$minor.$patch"
        echo "NEW_VERSION=$new" >> $env:GITHUB_ENV

    - name: Update APP_VERSION in config.py
      run: |
        $raw = "${{ env.NEW_VERSION }}"
        $clean = $raw.TrimStart("v")
        (Get-Content config.py) -replace 'APP_VERSION\s*=\s*".*"', "APP_VERSION = `"$clean`"" | Set-Content config.py
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git add config.py
        git commit -m "Bump version to $clean"
        git push

    - name: Create new Git tag
      run: |
        git tag ${{ env.NEW_VERSION }}
        git push origin ${{ env.NEW_VERSION }}

    - name: Install dependencies
      run: |
        pip install pyinstaller

    - name: Build EXE
      run: |
        pyinstaller --onefile --name "SzukajkaFirm" --icon="icona.ico" main.py

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.NEW_VERSION }}
        files: dist/SzukajkaFirm.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
